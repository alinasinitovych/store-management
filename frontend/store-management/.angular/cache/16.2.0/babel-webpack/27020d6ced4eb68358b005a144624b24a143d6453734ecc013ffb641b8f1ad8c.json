{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let OrderFormComponent = class OrderFormComponent {\n  constructor(orderService) {\n    this.orderService = orderService;\n    this.order = {\n      id: 0,\n      status: 0,\n      orderDate: new Date(),\n      customerId: 0,\n      customerAddress: '',\n      orderItems: []\n    };\n    this.orderItems = [];\n    this.customers = [];\n    this.products = [];\n    this.selectedCustomerId = 0;\n  }\n  ngOnInit() {\n    // Initialize products with three different products\n    this.products = [{\n      id: 1,\n      name: 'Product 1',\n      availableQuantity: 10,\n      size: 100,\n      price: 50.0,\n      description: 'Description for Product 1',\n      categoryId: 1,\n      createdDate: new Date()\n    }, {\n      id: 2,\n      name: 'Product 2',\n      availableQuantity: 15,\n      size: 150,\n      price: 75.0,\n      description: 'Description for Product 2',\n      categoryId: 2,\n      createdDate: new Date()\n    }, {\n      id: 3,\n      name: 'Product 3',\n      availableQuantity: 20,\n      size: 200,\n      price: 100.0,\n      description: 'Description for Product 3',\n      categoryId: 1,\n      createdDate: new Date()\n    }];\n    this.customers = [{\n      id: 1,\n      name: 'Customer A',\n      address: 'Address A',\n      ordersCount: 5,\n      totalOrderedCost: 500,\n      createdDate: new Date()\n    }, {\n      id: 2,\n      name: 'Customer B',\n      address: 'Address B',\n      ordersCount: 10,\n      totalOrderedCost: 1000,\n      createdDate: new Date()\n    }, {\n      id: 3,\n      name: 'Customer C',\n      address: 'Address C',\n      ordersCount: 3,\n      totalOrderedCost: 300,\n      createdDate: new Date()\n    }];\n  }\n  submitForm() {\n    const selectedCustomer = this.customers.find(customer => customer.id === this.selectedCustomerId);\n    if (selectedCustomer) {\n      this.order.customerId = this.selectedCustomerId;\n      this.order.customerAddress = selectedCustomer.address;\n      this.order.status = Number(this.order.status);\n      this.order.orderItems = [{\n        id: 0,\n        productId: 4,\n        quantity: 1\n      }, {\n        id: 0,\n        productId: 5,\n        quantity: 3\n      }];\n      console.log(this.order);\n      this.orderService.createOrder(this.order).subscribe(() => {});\n    }\n  }\n};\nOrderFormComponent = __decorate([Component({\n  selector: 'app-order-form',\n  templateUrl: './order-form.component.html',\n  styleUrls: ['./order-form.component.css']\n})], OrderFormComponent);","map":{"version":3,"names":["Component","OrderFormComponent","constructor","orderService","order","id","status","orderDate","Date","customerId","customerAddress","orderItems","customers","products","selectedCustomerId","ngOnInit","name","availableQuantity","size","price","description","categoryId","createdDate","address","ordersCount","totalOrderedCost","submitForm","selectedCustomer","find","customer","Number","productId","quantity","console","log","createOrder","subscribe","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Desktop\\infopulse-test-task\\frontend\\store-management\\src\\app\\components\\order-form\\order-form\\order-form.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Customer } from 'src/app/models/customer';\nimport { Order, CreateOrderDto, OrderItem } from 'src/app/models/order';\nimport { Product } from 'src/app/models/product';\nimport { OrderService } from 'src/app/services/order.service';\n@Component({\n  selector: 'app-order-form',\n  templateUrl: './order-form.component.html',\n  styleUrls: ['./order-form.component.css']\n})\nexport class OrderFormComponent implements OnInit {\n\n  order: CreateOrderDto = {\n    id:0,\n    status:0,\n    orderDate: new Date() ,\n    customerId: 0,    \n    customerAddress:'',\n    orderItems: []\n  };\n  orderItems: OrderItem[] = [];\n  customers: Customer[] =[]; \n  products: Product[] = []; \n\n  selectedCustomerId :number =0;\n  constructor(private orderService: OrderService) {}\n\n  \n\n  ngOnInit() {\n    // Initialize products with three different products\n    this.products = [\n      {\n        id: 1,\n        name: 'Product 1',\n        availableQuantity: 10,\n        size: 100,\n        price: 50.0,\n        description: 'Description for Product 1',\n        categoryId: 1,\n        createdDate: new Date()\n      },\n      {\n        id: 2,\n        name: 'Product 2',\n        availableQuantity: 15,\n        size: 150,\n        price: 75.0,\n        description: 'Description for Product 2',\n        categoryId: 2,\n        createdDate: new Date()\n      },\n      {\n        id: 3,\n        name: 'Product 3',\n        availableQuantity: 20,\n        size: 200,\n        price: 100.0,\n        description: 'Description for Product 3',\n        categoryId: 1,\n        createdDate: new Date()\n      }\n    ];\n    this.customers =[{\n      id: 1,\n      name: 'Customer A',\n      address: 'Address A',\n      ordersCount: 5,\n      totalOrderedCost: 500,\n      createdDate: new Date()\n    },\n    {\n      id: 2,\n      name: 'Customer B',\n      address: 'Address B',\n      ordersCount: 10,\n      totalOrderedCost: 1000,\n      createdDate: new Date()\n    },\n    {\n      id: 3,\n      name: 'Customer C',\n      address: 'Address C',\n      ordersCount: 3,\n      totalOrderedCost: 300,\n      createdDate: new Date()\n    }]\n  }\n  submitForm() {\n    const selectedCustomer = this.customers.find(customer => customer.id === this.selectedCustomerId);\n    if (selectedCustomer) {\n    this.order.customerId = this.selectedCustomerId;\n    this.order.customerAddress = selectedCustomer.address;\n   \n    this.order.status = Number(this.order.status);\n    this.order.orderItems = [\n      { id: 0, productId: 4, quantity: 1 },\n      { id: 0, productId: 5, quantity: 3 }\n    ];\n    console.log(this.order);\n    this.orderService.createOrder(this.order).subscribe(() => {\n\n    });\n  }}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}