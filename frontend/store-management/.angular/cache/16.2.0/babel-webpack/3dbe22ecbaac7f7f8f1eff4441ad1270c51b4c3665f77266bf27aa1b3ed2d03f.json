{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class OrderService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://localhost:7181/api/order'; // Update with your API URL\n  }\n\n  getOrderById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  getAllOrders() {\n    return this.http.get(this.apiUrl);\n  }\n  createOrder(order) {\n    console.log(\"ddd\");\n    return this.http.post(`${this.apiUrl}/create`, order);\n  }\n  deleteOrder(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  updateOrder(order) {\n    return this.http.post(`${this.apiUrl}/update`, order);\n  }\n  getOrderItems(orderId) {\n    return this.http.get(`${this.apiUrl}/${orderId}/orderitems`);\n  }\n  addOrderItem(orderId, orderItem) {\n    return this.http.post(`${this.apiUrl}/${orderId}/orderitems`, orderItem);\n  }\n}\n_class = OrderService;\n_class.ɵfac = function OrderService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["OrderService","constructor","http","apiUrl","getOrderById","id","get","getAllOrders","createOrder","order","console","log","post","deleteOrder","delete","updateOrder","getOrderItems","orderId","addOrderItem","orderItem","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Desktop\\infopulse-test-task\\frontend\\store-management\\src\\app\\services\\order.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Order, OrderDto, OrderItem } from '../models/order';\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n\n  private apiUrl = 'https://localhost:7181/api/order'; // Update with your API URL\n\n  constructor(private http: HttpClient) {}\n\n  getOrderById(id: number): Observable<Order> {\n    return this.http.get<Order>(`${this.apiUrl}/${id}`);\n  }\n\n  getAllOrders(): Observable<Order[]> {\n    return this.http.get<Order[]>(this.apiUrl);\n  }\n  createOrder(order: OrderDto): Observable<any> {\n    console.log(\"ddd\");\n    return this.http.post(`${this.apiUrl}/create`, order);\n  }\n\n  deleteOrder(id: number): Observable<any> {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n\n  updateOrder(order: Order): Observable<any> {\n    return this.http.post(`${this.apiUrl}/update`, order);\n  }\n\n  getOrderItems(orderId: number): Observable<OrderItem[]> {\n    return this.http.get<OrderItem[]>(`${this.apiUrl}/${orderId}/orderitems`);\n  }\n\n  addOrderItem(orderId: number, orderItem: OrderItem): Observable<any> {\n    return this.http.post(`${this.apiUrl}/${orderId}/orderitems`, orderItem);\n  }\n}\n"],"mappings":";;;AAOA,OAAM,MAAOA,YAAY;EAIvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,kCAAkC,CAAC,CAAC;EAEd;;EAEvCC,YAAYA,CAACC,EAAU;IACrB,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAQ,GAAG,IAAI,CAACH,MAAM,IAAIE,EAAE,EAAE,CAAC;EACrD;EAEAE,YAAYA,CAAA;IACV,OAAO,IAAI,CAACL,IAAI,CAACI,GAAG,CAAU,IAAI,CAACH,MAAM,CAAC;EAC5C;EACAK,WAAWA,CAACC,KAAe;IACzBC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;IAClB,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,GAAG,IAAI,CAACT,MAAM,SAAS,EAAEM,KAAK,CAAC;EACvD;EAEAI,WAAWA,CAACR,EAAU;IACpB,OAAO,IAAI,CAACH,IAAI,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,MAAM,IAAIE,EAAE,EAAE,CAAC;EACjD;EAEAU,WAAWA,CAACN,KAAY;IACtB,OAAO,IAAI,CAACP,IAAI,CAACU,IAAI,CAAC,GAAG,IAAI,CAACT,MAAM,SAAS,EAAEM,KAAK,CAAC;EACvD;EAEAO,aAAaA,CAACC,OAAe;IAC3B,OAAO,IAAI,CAACf,IAAI,CAACI,GAAG,CAAc,GAAG,IAAI,CAACH,MAAM,IAAIc,OAAO,aAAa,CAAC;EAC3E;EAEAC,YAAYA,CAACD,OAAe,EAAEE,SAAoB;IAChD,OAAO,IAAI,CAACjB,IAAI,CAACU,IAAI,CAAC,GAAG,IAAI,CAACT,MAAM,IAAIc,OAAO,aAAa,EAAEE,SAAS,CAAC;EAC1E;;SAhCWnB,YAAY;;mBAAZA,MAAY,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAZvB,MAAY;EAAAwB,OAAA,EAAZxB,MAAY,CAAAyB,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}